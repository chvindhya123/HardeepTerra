module "SHC_ALB_SG" {
   source = "../modules/security_group"
   com = "LB"
   vars = "${var.shc}"
}
module "SHC_ASG_SG" {
   source = "../modules/security_group"
   com = "ASG"
   vars = "${var.shc}"
}
module "SearchHead_ALB" {
   source = "../modules/application_load_balancer"
   subnet_ids = "${var.subnets["shc"]}"
   security_groups_ids = ["${module.SHC_ALB_SG.security_group_id}"]
   vars = "${var.shc}"
}
module "SHC_ASG" {
   source = "../modules/autoscaling_group"
   vars = "${var.shc}"
   security_groups = ["${module.SHC_ASG_SG.security_group_id}"]
#   user_data = "Hello"
   vpc_subnets = "${var.subnets["shc"]}"
   target_group_arns = ["${module.SearchHead_ALB.tg_arn}"]
}


  
module "SHC_ALB_SG_InRule_443" {
   source = "../modules/security_group_rule_by_cidr"
   sg_id  = "${module.SHC_ALB_SG.security_group_id}"
   rule_type = "ingress"
   protocol = "tcp"
   from_port = "${var.ports["https"]}"
   to_port = "${var.ports["https"]}"
   source_cidr_blocks = ["0.0.0.0/0"]
}       
module "SHC_ALB_SG_OutRule_443" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ALB_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["https"]}"
   to_port = "${var.ports["https"]}"
   source_sg_id = "${module.SHC_ASG_SG.security_group_id}"
}   

module "SHC_ASG_SG_InRule_443" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "ingress"
   protocol = "tcp"
   from_port = "${var.ports["https"]}"
   to_port = "${var.ports["https"]}"
   source_sg_id = "${module.SHC_ALB_SG.security_group_id}"
} 

module "SHC_ASG_SG_InRule_22" {
   source = "../modules/security_group_rule_by_cidr"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "ingress"
   protocol = "tcp"
   from_port = "${var.ports["ssh"]}"
   to_port = "${var.ports["ssh"]}"
   source_cidr_blocks = ["0.0.0.0/0"]
}     
module "SHC_ASG_SG_InRule_Self" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "ingress"
   protocol = "-1"
   from_port = "0"
   to_port = "65535"
   source_sg_id = "${module.SHC_ASG_SG.security_group_id}"
}  

module "SHC_ASG_SG_InRule_8089" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "ingress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.Dep_ASG_SG.security_group_id}"
} 
module "SHC_ASG_SG_OutRule_8089_LM" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.LM_ASG_SG.security_group_id}"
} 
module "SHC_ASG_SG_OutRule_8089_CM" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.CM_ASG_SG.security_group_id}"
} 

module "SHC_ASG_SG_OutRule_8089_CPS1" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.CPS1_ASG_SG.security_group_id}"
} 
module "SHC_ASG_SG_OutRule_8089_CPS2" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.CPS2_ASG_SG.security_group_id}"
} 
module "SHC_ASG_SG_OutRule_8089_CPS3" {
   source = "../modules/security_group_rule_by_sg"
   sg_id  = "${module.SHC_ASG_SG.security_group_id}"
   rule_type = "egress"
   protocol = "tcp"
   from_port = "${var.ports["tcp_8089"]}"
   to_port = "${var.ports["tcp_8089"]}"
   source_sg_id = "${module.CPS3_ASG_SG.security_group_id}"
} 


# egress on 8089 to all three clusterpeer ASG

